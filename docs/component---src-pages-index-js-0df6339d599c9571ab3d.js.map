{"version":3,"sources":["webpack:///./src/components/ArticleCard.js","webpack:///./src/pages/index.js"],"names":["ArticleCard","title","post","date","tags","to","fields","slug","itemProp","interactive","elevation","Elevation","TWO","frontmatter","description","excerpt","icon","intent","map","tag","key","round","pageQuery","BlogIndex","data","location","siteTitle","site","siteMetadata","posts","allMarkdownRemark","nodes","length","style","listStyle"],"mappings":"6OAoBeA,EAfK,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,KACrC,OACI,kBAAC,OAAD,CAAMC,GAAIH,EAAKI,OAAOC,KAAMC,SAAS,OACjC,kBAAC,IAAD,CAAMC,aAAa,EAAMC,UAAWC,IAAUC,KAC1C,kBAAC,IAAD,KACI,0BAAMJ,SAAS,YAAYP,IAE/B,kBAAC,IAAD,KAAKE,GACL,2BAAID,EAAKW,YAAYC,aAAeZ,EAAKa,SACzC,kBAAC,IAAD,CAAMC,KAAK,MAAMC,OAAQ,YAAab,EAAKc,KAAI,SAAAC,GAAG,OAAK,kBAAC,IAAD,CAAKC,IAAKD,EAAKE,OAAO,GAAOF,SC8BvFG,GAFEC,UAlCG,SAAC,GAAwB,IAAD,EAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACnBC,GAAY,UAAAF,EAAKG,KAAKC,oBAAV,eAAwB3B,QAAxB,QACZ4B,EAAQL,EAAKM,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAEN,kBAAC,IAAD,CAAQP,SAAUA,EAAUxB,MAAOyB,GACjC,kBAAC,IAAD,CAAKzB,MAAM,cACX,kBAAC,IAAD,MACA,oDAQJ,kBAAC,IAAD,CAAQwB,SAAUA,EAAUxB,MAAOyB,GACjC,kBAAC,IAAD,CAAKzB,MAAM,cACX,wBAAIgC,MAAO,CAAEC,UAAU,SACpBL,EAAMX,KAAI,SAAAhB,GACT,IAAMD,EAAQC,EAAKW,YAAYZ,OAASC,EAAKI,OAAOC,KAEpD,OACE,wBAAIa,IAAKlB,EAAKI,OAAOC,MACjB,kBAAC,EAAD,CAAaN,MAAOA,EAAOC,KAAMA,EAAMC,KAAMD,EAAKW,YAAYV,KAAMC,KAAMF,EAAKW,YAAYT,cAWrF","file":"component---src-pages-index-js-0df6339d599c9571ab3d.js","sourcesContent":["import {Link} from \"gatsby\";\nimport React from \"react\";\n\nimport {Card, Elevation, Tag, H2, H5, Icon} from \"@blueprintjs/core\";\n\nconst ArticleCard = ({title, post, date, tags}) => {\n    return (\n        <Link to={post.fields.slug} itemProp=\"url\">\n            <Card interactive={true} elevation={Elevation.TWO}>\n                <H2>\n                    <span itemProp=\"headline\">{title}</span>\n                </H2>\n                <H5>{date}</H5>\n                <p>{post.frontmatter.description || post.excerpt}</p>\n                <Icon icon=\"tag\" intent={\"Success\"}/>{tags.map(tag => (<Tag key={tag} round={true}>{tag}</Tag>))}\n            </Card>\n        </Link>\n    )\n}\n\nexport default ArticleCard","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport ArticleCard from \"../components/ArticleCard\";\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <SEO title=\"All posts\" />\n        <Bio />\n        <p>\n          No blog posts found.\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"All posts\" />\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <li key={post.fields.slug}>\n                <ArticleCard title={title} post={post} date={post.frontmatter.date} tags={post.frontmatter.tags}/>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"YYYY-MM-DD (ddd)\")\n          title\n          description\n          tags\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}