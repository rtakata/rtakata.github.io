{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["BlogPostTemplate","data","location","post","markdownRemark","siteTitle","site","siteMetadata","title","previous","next","frontmatter","description","excerpt","className","itemScope","itemType","itemProp","icon","iconSize","date","tags","map","tag","key","round","interactive","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","to","fields","slug","rel","pageQuery"],"mappings":"4FAAA,0HAsEeA,UA7DU,SAAC,GAAwB,IAAD,EAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAC1BC,EAAOF,EAAKG,eACZC,GAAY,UAAAJ,EAAKK,KAAKC,oBAAV,eAAwBC,QAAxB,QACVC,EAAmBR,EAAnBQ,SAAUC,EAAST,EAATS,KAElB,OACE,kBAAC,IAAD,CAAQR,SAAUA,EAAUM,MAAOH,GACjC,kBAAC,IAAD,CACEG,MAAOL,EAAKQ,YAAYH,MACxBI,YAAaT,EAAKQ,YAAYC,aAAeT,EAAKU,UAEpD,6BACEC,UAAU,YACVC,WAAS,EACTC,SAAS,6BAET,gCACE,kBAAC,IAAD,CAAIC,SAAS,YAAYd,EAAKQ,YAAYH,OAC1C,2BAAG,kBAAC,IAAD,CAAMU,KAAK,WAAWC,SAAS,WAAYhB,EAAKQ,YAAYS,KAAM,IAAI,kBAAC,IAAD,CAAMF,KAAK,MAAMC,SAAS,WAAYhB,EAAKQ,YAAYU,KAAKC,KAAI,SAAAC,GAAG,OAAK,kBAAC,IAAD,CAAKC,IAAKD,EAAKE,OAAO,GAAOF,QAEhL,6BACA,kBAAC,IAAD,CAAMG,aAAa,GACjB,yBACEZ,UAAW,6BACXa,wBAAyB,CAAEC,OAAQzB,EAAK0B,MACxCZ,SAAS,iBAGb,6BACE,kCAEJ,yBAAKH,UAAU,iBACb,wBACEgB,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,4BACG1B,GACC,kBAAC,OAAD,CAAM2B,GAAI3B,EAAS4B,OAAOC,KAAMC,IAAI,QAChC,kBAAC,IAAD,CAAMrB,KAAK,eADf,IAC+BT,EAASE,YAAYH,QAIxD,4BACGE,GACC,kBAAC,OAAD,CAAM0B,GAAI1B,EAAK2B,OAAOC,KAAMC,IAAI,QAC7B7B,EAAKC,YAAYH,MADpB,IAC2B,kBAAC,IAAD,CAAMU,KAAK,sBAY7C,IAAMsB,EAAS","file":"component---src-templates-blog-post-js-c7b5317656fbf39707bd.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nimport {Card, H1, Icon, Tag} from \"@blueprintjs/core\";\n\n\nconst BlogPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { previous, next } = data\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <H1 itemProp=\"headline\">{post.frontmatter.title}</H1>\n          <p><Icon icon=\"calendar\" iconSize=\"1.2rem\" />{post.frontmatter.date}{\" \"}<Icon icon=\"tag\" iconSize=\"1.2rem\" />{post.frontmatter.tags.map(tag => (<Tag key={tag} round={true}>{tag}</Tag>))}</p>\n        </header>\n        <hr />\n        <Card interactive={false}>\n          <div\n            className={\"bp3-running-text .modifier\"}\n            dangerouslySetInnerHTML={{ __html: post.html }}\n            itemProp=\"articleBody\"\n          />\n        </Card>\n        <hr />\n          <footer />\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                  <Icon icon=\"arrow-left\"/> {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} <Icon icon=\"arrow-right\"/>\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"YYYY-MM-DD (ddd)\")\n        description\n        tags\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"sourceRoot":""}